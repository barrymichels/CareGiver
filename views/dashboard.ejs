<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>Dashboard - Wayne's Schedule</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/dashboard.css">
    <link rel="stylesheet" href="/css/header.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover">
    <meta name="theme-color" content="#646cff">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <link rel="manifest" href="/manifest.json">
    <link rel="apple-touch-icon" href="/icons/icon-192x192.png">
</head>
<body>
    <%- include('partials/header', { user }) %>
    
    <main class="dashboard-content">
        <div class="week-view">
            <div class="week-header">
                <div class="week-navigation">
                    <% if (weekOffset > -4) { %>
                        <a href="/?weekOffset=<%= weekOffset - 1 %>" class="nav-button prev-week">
                            &larr; Previous Week
                        </a>
                    <% } %>
                    
                    <h2 class="week-title"><%= weekTitle %></h2>
                    
                    <% if (weekOffset < 1) { %>
                        <a href="/?weekOffset=<%= weekOffset + 1 %>" class="nav-button next-week">
                            Next Week &rarr;
                        </a>
                    <% } %>
                </div>
            </div>
            
            <div class="schedule-grid">
                <% 
                const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
                const timeSlots = [
                    { time: '8:00am', label: 'Morning' },
                    { time: '12:30pm', label: 'Afternoon' },
                    { time: '5:00pm', label: 'Evening' },
                    { time: '9:30pm', label: 'Night' }
                ];

                // Generate dates for the week
                const weekDates = days.map((day, index) => {
                    const date = new Date(weekStart);
                    date.setDate(date.getDate() + index);
                    return {
                        name: day,
                        date: date,
                        formatted: date.toLocaleDateString('en-US', { 
                            month: 'short', 
                            day: 'numeric'
                        })
                    };
                });
                %>
                
                <% weekDates.forEach(day => { %>
                    <div class="day-column">
                        <div class="day-header">
                            <div class="day-name"><%= day.name %></div>
                            <div class="day-date"><%= day.formatted %></div>
                        </div>
                        <div class="day-content">
                            <% timeSlots.forEach(slot => { %>
                                <div class="time-slot">
                                    <div class="time-slot-header">
                                        <span class="time"><%= slot.time %></span>
                                        <span class="label"><%= slot.label %></span>
                                    </div>
                                    <div class="time-slot-content">
                                        <% const assignment = assignments.find(a => 
                                            a.day_date === day.date.toLocaleDateString('en-CA') && 
                                            a.time_slot === slot.time
                                        ); %>
                                        <div class="assignment <%= assignment ? 'assigned' : 'open' %>">
                                            <%= assignment ? assignment.user_name : 'Open' %>
                                        </div>
                                    </div>
                                </div>
                            <% }) %>
                        </div>
                    </div>
                <% }) %>
            </div>
        </div>

        <%- include('partials/availability-manager', { 
            days,
            timeSlots,
            weekStart,
            userAvailability 
        }) %>
    </main>

    <%- include('partials/unsaved-changes-modal') %>

    <script src="/js/header.js"></script>
    <script src="/js/availability.js"></script>
    <script>
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/sw.js').then(registration => {
            console.log('ServiceWorker registered');
          }).catch(err => {
            console.log('ServiceWorker registration failed:', err);
          });
        });
      }
    </script>
</body>
</html>